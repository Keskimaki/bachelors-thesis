@article{Watada19,
  title = {Emerging Trends, Techniques and Open Issues of Containerization: A Review},
  author = {Watada, Junzo and Roy, Arunava and Kadikar, Ruturaj and Pham, Hoang and Xu, Bing},
  year = 2019,
  journal = {IEEE Access},
  volume = 7,
  number = {},
  pages = {152443--152472},
  doi = {10.1109/ACCESS.2019.2945930}
}
@inproceedings{Naydenov23,
  title = {Cloud Container Orchestration Architectures, Models and Methods: a Systematic Mapping Study},
  author = {Naydenov, Nikolas and Ruseva, Stela},
  year = 2023,
  booktitle = {2023 22nd International Symposium INFOTEH-JAHORINA (INFOTEH)},
  volume = {},
  number = {},
  pages = {1--8},
  doi = {10.1109/INFOTEH57020.2023.10094059}
}
@article{Khan17,
  title = {Key Characteristics of a Container Orchestration Platform to Enable a Modern Application},
  author = {Khan, Asif},
  year = 2017,
  journal = {IEEE Cloud Computing},
  volume = 4,
  number = 5,
  pages = {42--48},
  doi = {10.1109/MCC.2017.4250933}
}
@inproceedings{Malviya22,
  title = {A Comparative Analysis of Container Orchestration Tools in Cloud Computing},
  author = {Malviya, Anshita and Dwivedi, Rajendra Kumar},
  year = 2022,
  booktitle = {2022 9th International Conference on Computing for Sustainable Global Development (INDIACom)},
  volume = {},
  number = {},
  pages = {698--703},
  doi = {10.23919/INDIACom54597.2022.9763171}
}
@article{Truyen19,
  title = {A Comprehensive Feature Comparison Study of Open-Source Container Orchestration Frameworks},
  author = {Truyen, Eddy and Van Landuyt, Dimitri and Preuveneers, Davy and Lagaisse, Bert and Joosen, Wouter},
  year = 2019,
  journal = {Applied Sciences},
  volume = 9,
  number = 5,
  doi = {10.3390/app9050931},
  issn = {2076-3417},
  url = {https://www.mdpi.com/2076-3417/9/5/931},
  article-number = 931,
  abstract = {(1) Background: Container orchestration frameworks provide support for management of complex distributed applications. Different frameworks have emerged only recently, and they have been in constant evolution as new features are being introduced. This reality makes it difficult for practitioners and researchers to maintain a clear view of the technology space. (2) Methods: we present a descriptive feature comparison study of the three most prominent orchestration frameworks: Docker Swarm, Kubernetes, and Mesos, which can be combined with Marathon, Aurora or DC/OS. This study aims at (i) identifying the common and unique features of all frameworks, (ii) comparing these frameworks qualitatively and quantitatively with respect to genericity in terms of supported features, and (iii) investigating the maturity and stability of the frameworks as well as the pioneering nature of each framework by studying the historical evolution of the frameworks on GitHub. (3) Results: (i) we have identified 124 common features and 54 unique features that we divided into a taxonomy of 9 functional aspects and 27 functional sub-aspects. (ii) Kubernetes supports the highest number of accumulated common and unique features for all 9 functional aspects; however, no evidence has been found for significant differences in genericity with Docker Swarm and DC/OS. (iii) Very little feature deprecations have been found and 15 out of 27 sub-aspects have been identified as mature and stable. These are pioneered in descending order by Kubernetes, Mesos, and Marathon. (4) Conclusion: there is a broad and mature foundation that underpins all container orchestration frameworks. Likely areas for further evolution and innovation include system support for improved cluster security and container security, performance isolation of GPU, disk and network resources, and network plugin architectures.}
}
@inproceedings{Jawarneh19,
  title = {Container Orchestration Engines: A Thorough Functional and Performance Comparison},
  author = {Jawarneh, Isam Mashhour Al and Bellavista, Paolo and Bosi, Filippo and Foschini, Luca and Martuscelli, Giuseppe and Montanari, Rebecca and Palopoli, Amedeo},
  year = 2019,
  booktitle = {ICC 2019 - 2019 IEEE International Conference on Communications (ICC)},
  volume = {},
  number = {},
  pages = {1--6},
  doi = {10.1109/ICC.2019.8762053}
}
@article{Bernstein14,
  title = {Containers and Cloud: From LXC to Docker to Kubernetes},
  author = {Bernstein, David},
  year = 2014,
  journal = {IEEE Cloud Computing},
  volume = 1,
  number = 3,
  pages = {81--84},
  doi = {10.1109/MCC.2014.51}
}
@misc{Kubernetes23,
  title = {Overview},
  author = {Kubernetes},
  year = 2023,
  url = {https://kubernetes.io/docs/concepts/overview},
  note = {[haettu 24.9.2023]}
}
@inproceedings{Jabbari16,
  title = {What is DevOps? A Systematic Mapping Study on Definitions and Practices},
  author = {Jabbari, Ramtin and bin Ali, Nauman and Petersen, Kai and Tanveer, Binish},
  year = 2016,
  booktitle = {Proceedings of the Scientific Workshop Proceedings of XP2016},
  location = {Edinburgh, Scotland, UK},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  series = {XP '16 Workshops},
  doi = {10.1145/2962695.2962707},
  isbn = 9781450341349,
  url = {https://doi.org/10.1145/2962695.2962707},
  abstract = {Context: DevOps, the combination of Development and Operations, is a new way of thinking in the software engineering domain that recently received much attention. Given that DevOps is a new term and novel concept recently introduced, no common understanding of what it entails has been achieved yet. Consequently, definitions of DevOps often only represent a part that is relevant to the concept.Objective:This study aims to characterize DevOps by exploring central components of DevOps definitions reported in the literature, specifying practices explicitly proposed for DevOps and investigating the similarities and differences between DevOps and other existing methods in software engineering.Method: A systematic mapping study was conducted that used six electronic databases: IEEE, ACM, Inspec, Scopus, Wiley Online Library and Web of Science.Result: 44 studies have been selected that report a definition of DevOps, 15 studies explicitly stating DevOps practices, and 15 studies stating how DevOps is related to other existing methods. Papers in some cases stated a combination of a definition, practices, and relations to other methods, the total number of primary studies was 49.Conclusion: We proposed a definition for DevOps which may overcome inconsistencies over the various existing definitions of individual research studies. In addition, the practices explicitly proposed for DevOps have been presented as well as the relation to other software development methods.},
  articleno = 12,
  numpages = 11,
  keywords = {Software development method, DevOps definition, DevOps practice}
}
@article{Klein21,
  title = {The DevOps: A Concise Understanding to the DevOps Philosophy and Science},
  author = {Klein, Brandon Thorin},
  year = 2021,
  month = 5,
  journal = {},
  doi = {10.2172/1785164},
  url = {https://www.osti.gov/biblio/1785164},
  abstractnote = {This writing examines the DevOps practice from a new perspective, one of understanding its philosophical and scientific nature. DevOps has fundamentally changed the landscape for research and development based on guiding philosophical and scientific principles. Advanced computational technologies and domains have adopted DevOps to enable advanced solution engineering for efficient, quality-assured output. The author provides a concise account of how the philosophy and science of DevOps synergistically defines its essential disposition.},
  place = {United States}
}
@misc{Wikimedia23,
  title = {DevOps toolchain},
  author = {{Wikimedia Commons}},
  year = 2023,
  url = {https://upload.wikimedia.org/wikipedia/commons/0/05/Devops-toolchain.svg},
  note = {[haettu 24.9.2023]}
}
@inproceedings{Kang16,
  title = {Container and Microservice Driven Design for Cloud Infrastructure DevOps},
  author = {Kang, Hui and Le, Michael and Tao, Shu},
  year = 2016,
  booktitle = {2016 IEEE International Conference on Cloud Engineering (IC2E)},
  volume = {},
  number = {},
  pages = {202--211},
  doi = {10.1109/IC2E.2016.26}
}
@inproceedings{Dua14,
  title = {Virtualization vs Containerization to Support PaaS},
  author = {Dua, Rajdeep and Raja, A Reddy and Kakadia, Dharmesh},
  year = 2014,
  booktitle = {2014 IEEE International Conference on Cloud Engineering},
  volume = {},
  number = {},
  pages = {610--614},
  doi = {10.1109/IC2E.2014.41}
}
